---
import Layout from "@src/components/Layout.astro";
import ListGrid from "@src/components/ListGrid.astro";

import {
  db,
  Bookmark,
  BookmarkSnooze,
  User,
  eq,
  and,
  isNotNull,
} from "astro:db";
import { Debug } from "astro:components";

const currentUser = Astro.locals.user;

if (!currentUser) {
  return Astro.redirect("/auth/login/");
}

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();

  const formAction = formData.get("form-action");

  if (formAction === "unarchive") {
    const id = formData.get("id");
    await db
      .update(Bookmark)
      .set({ archivedAt: null })
      .where(eq(Bookmark._id, id));
  }
}

const allBookmarks = await db
  .select()
  .from(Bookmark)
  .where(and(eq(Bookmark.userId, currentUser.id)));

const bookmarkSnoozes = await db
  .select()
  .from(BookmarkSnooze)
  .innerJoin(Bookmark, eq(BookmarkSnooze.bookmarkId, Bookmark.id))
  .innerJoin(User, eq(Bookmark.userId, User.id))
  .where(and(eq(User.id, currentUser.id)));
---

<Layout title="Bookmarks">
  <p>This is going to be the bookmarks archive.</p>

  {allBookmarks.length === 0 && <p>You haven't archived any bookmarks yet.</p>}

  {
    allBookmarks.length > 0 && (
      <ListGrid
        items={allBookmarks}
        actions={[{ label: "Unarchive", value: "unarchive" }]}
      />
    )
  }

  <p><a href="/bookmarks/">Back to your bookmarks</a></p>

  <Debug {allBookmarks} />

  <h2>Bookmark snoozes</h2>

  <Debug {bookmarkSnoozes} />
</Layout>
