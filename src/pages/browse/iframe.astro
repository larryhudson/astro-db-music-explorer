---
import Layout from "@src/components/Layout.astro";

import { db, Bookmark, eq, and, isNull, NOW } from "astro:db";
import { Debug } from "astro:components";

let statusMessage;

const currentUser = Astro.locals.user;

if (!currentUser) {
  return Astro.redirect("/auth/login/");
}

const url = Astro.url.searchParams.get("url");

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const formAction = formData.get("form-action");

  if (formAction === "create-bookmark") {
    // TODO: implement this
    statusMessage = "Created bookmark.";
  }
}
---

<Layout title="Browse">
  {statusMessage && <p>{statusMessage}</p>}
  <p>This is going to be the browse page.</p>

  <textarea id="drop-area"></textarea>

  <iframe src={url}></iframe>

  <h2>Pathway</h2>

  <ul id="pathway-list">
    <li>{url}</li>
  </ul>
</Layout>

<style>
  iframe {
    width: 100%;
    height: 80vh;
  }
</style>

<script>
  const iframe = document.querySelector("iframe");
  const dropArea = document.getElementById("drop-area");

  // Prevent the default behavior of the drop event
  dropArea.addEventListener("dragover", (e) => {
    e.preventDefault();
  });

  // Handle the drop event

  dropArea.addEventListener("drop", (e) => {
    e.preventDefault();

    // Get all available data formats
    const formats = e.dataTransfer.types;

    // Loop through each format and log its value
    for (let i = 0; i < formats.length; i++) {
      const format = formats[i];
      const data = e.dataTransfer.getData(format);
      console.log(`Format: ${format}, Data: ${data}`);
    }
  });
</script>
