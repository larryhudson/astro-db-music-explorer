---
import LoginLogout from "@src/components/LoginLogout.astro";
import Navigation from "@src/components/Navigation.astro";
import DebugSwitch from "@src/components/DebugSwitch.astro";
import FeedbackForm from "@src/components/FeedbackForm.astro";
import Breadcrumbs from "@src/components/Breadcrumbs.astro";
import "@src/styles/global.css";
import Htmx from "htmx.org/dist/htmx.min.js?url";
import { ViewTransitions } from "astro:transitions";

const title = Astro.props.title || "Astro";
const breadcrumbs = Astro.props.breadcrumbs || [];

const messageFromUrlParams = Astro.url.searchParams.get("message");
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <script src={Htmx} is:inline></script>
    <ViewTransitions />
  </head>
  <body>
    <div id="loading" class="loading">Loading...</div>
    <header>
      <div class="flex-row">
        <Navigation />
        <LoginLogout />
      </div>
      <DebugSwitch />
      <Breadcrumbs {title} {breadcrumbs} />
    </header>
    <main>
      <h1>{title}</h1>
      {
        messageFromUrlParams && (
          <p class="notice">Status message: {messageFromUrlParams}</p>
        )
      }
      <div>
        <slot />
      </div>
    </main>
    <footer>
      <FeedbackForm />
    </footer>
    <style>
      .flex-row {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        justify-content: space-between;
      }
      .notice {
        border: 2px solid var(--color-accent);
        background-color: var(--color-accent-glare);
        border-radius: 10px;
        padding: 0.5rem 1rem;
      }
      #loading {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(255, 255, 255, 0.8);
        align-items: center;
        justify-content: center;
      }

      #breadcrumbs {
        font-size: var(--step--1);
      }

      #breadcrumbs ul {
        list-style: none;
        padding-left: 0;
        display: flex;
        gap: 1rem;
      }

      #breadcrumbs li::before {
        content: ">";
        margin-right: 1rem;
      }

      #breadcrumbs li:first-child::before {
        content: "";
      }

      #breadcrumbs a {
        text-decoration: none;
      }
    </style>
    <script is:inline>
      let loadingTimeout = null;
      document.addEventListener("astro:before-preparation", () => {
        loadingTimeout = setTimeout(() => {
          document.querySelector("#loading").style.display = "flex";
        }, 250);
      });
      document.addEventListener("astro:after-preparation", () => {
        clearTimeout(loadingTimeout);
        document.querySelector("#loading").style.display = "none";
      });
    </script>
  </body>
</html>
